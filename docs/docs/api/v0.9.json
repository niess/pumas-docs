{"files":[{"file":"pumas.h","functions":["pumas_locals_cb","pumas_medium_cb","pumas_function_t","pumas_handler_cb","pumas_random_cb","pumas_initialise","pumas_finalise","pumas_dump","pumas_load","pumas_transport","pumas_print","pumas_tag","pumas_particle","pumas_error_string","pumas_error_function","pumas_error_handler_set","pumas_error_handler_get","pumas_error_catch","pumas_error_raise","pumas_error_print","pumas_context_create","pumas_context_destroy","pumas_property_grammage","pumas_property_proper_time","pumas_property_magnetic_rotation","pumas_property_kinetic_energy","pumas_property_energy_loss","pumas_property_scattering_length","pumas_property_cross_section","pumas_material_name","pumas_material_index","pumas_material_length","pumas_composite_length","pumas_composite_update","pumas_composite_properties","pumas_table_value","pumas_table_length","pumas_table_index","pumas_recorder_create","pumas_recorder_clear","pumas_recorder_destroy","pumas_allocate_cb","pumas_memory_allocator","pumas_reallocate_cb","pumas_memory_reallocator","pumas_deallocate_cb","pumas_memory_deallocator"],"meta":{},"lines":1202}],"functions":{"pumas_initialise":{"type":"function","file":"pumas.h","line":471,"lineto":472,"args":[{"name":"particle","type":"enum pumas_particle","comment":"The type of the particle to transport.\n"},{"name":"mdf_path","type":"const char *","comment":"The path to a Material Description File (MDF), or <code>NULL</code>.\n"},{"name":"dedx_path","type":"const char *","comment":"The path to the energy loss tabulation(s), or <code>NULL</code>.\n"},{"name":"error","type":"struct pumas_error *","comment":"A structure to fill with parsing errors, or <code>NULL</code>.\n"}],"argline":"enum pumas_particle particle, const char *mdf_path, const char *dedx_path, struct pumas_error *error","sig":"enum pumas_particle::const char *::const char *::struct pumas_error *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Initialise the PUMAS library.</p>\n","comments":"<p class=\"longComment\">Initialise the library from a MDF and a set of energy loss tabulations. Load the materials data and precompute various properties. <em>mdf_path</em> and/or <em>dedx_path</em> can be set to <code>NULL</code>. If so the corresponding path is read from the <code>PUMAS_MDF</code> or <code>PUMAS_DEDX</code> environment variable.</p>\n\n<p class=\"longComment\">Call <a href=\"./#v0.9/group/pumas/pumas_finalise\">pumas_finalise</a> in order to unload the library and release all alocated memory.</p>\n\n<p class=\"longComment\"><strong>Warnings</strong> : this function is not thread safe. Trying to (re-)initialise an already initialised library will generate an error. <a href=\"./#v0.9/group/pumas/pumas_finalise\">pumas_finalise</a> must be called first.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_END_OF_FILE             And unexpected EOF occured.\n\n PUMAS_RETURN_FORMAT_ERROR            A file has a wrong format.\n\n PUMAS_RETURN_INCOMPLETE_FILE         There are missing entries in the MDF.\n\n PUMAS_RETURN_INITIALISATION_ERROR    The library is already initialised.\n\n PUMAS_RETURN_IO_ERROR                A file couldn&#39;t be read.\n\n PUMAS_RETURN_MEMORY_ERROR            Couldn&#39;t allocate memory.\n\n PUMAS_RETURN_PATH_ERROR              A file couldn&#39;t be opened.\n\n PUMAS_RETURN_TOO_LONG                Some XML node in the MDF is too long.\n\n PUMAS_RETURN_UNDEFINED_MDF           No energy loss path was provided.\n\n PUMAS_RETURN_UNDEFINED_MDF           No MDF was provided.\n\n PUMAS_RETURN_UNKNOWN_ELEMENT         An elemnt in the MDF wasn&#39;t defined.\n\n PUMAS_RETURN_UNKNOWN_MATERIAL        An material in the MDF wasn&#39;t defined.\n\n PUMAS_RETURN_UNKNOWN_PARTICLE        The given type is not supported.\n</code></pre>\n","group":"pumas"},"pumas_finalise":{"type":"function","file":"pumas.h","line":483,"lineto":483,"args":[],"argline":"","sig":"","return":{"type":"void","comment":null},"description":"<p>Finalise the PUMAS library.</p>\n","comments":"<p class=\"longComment\">Finalise the library and free the shared memory. Call <a href=\"./#v0.9/group/pumas/pumas_initialise\">pumas_initialise</a> in order to reload the library.</p>\n\n<p class=\"longComment\"><strong>Warnings</strong> : This function is not thread safe. Finalising the library doesn&#39;t release the memory allocated for any <a href=\"./#v0.9/type/pumas_context\">pumas_context</a>.</p>\n","group":"pumas"},"pumas_dump":{"type":"function","file":"pumas.h","line":507,"lineto":507,"args":[{"name":"stream","type":"FILE *","comment":"The stream where to dump.\n"}],"argline":"FILE *stream","sig":"FILE *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Dump the PUMAS library configuration to a stream.</p>\n","comments":"<p class=\"longComment\">Dump the current library configuration to a stream as a binary object. Note that only globally shared data are dumped, i.e. material properties and tables as read from a MDF. Simulation contexts, media, recorders, ect ... are not. This binary dump allows for a fast initialisation of the library in subsequent uses.</p>\n\n<p class=\"longComment\"><strong>Warnings</strong> : The binary dump is raw formated, hence <em>a priori</em> platform dependent.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INITIALISATION_ERROR    The library isn&#39;t initialised.\n\n PUMAS_RETURN_IO_ERROR                Couldn&#39;t write to the stream.\n</code></pre>\n","group":"pumas"},"pumas_load":{"type":"function","file":"pumas.h","line":531,"lineto":531,"args":[{"name":"stream","type":"FILE *","comment":"The stream where to dump.\n"}],"argline":"FILE *stream","sig":"FILE *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Load the configuration from a binary dump.</p>\n","comments":"<p class=\"longComment\">Load the library configuration from a binary dump and initialise accordingly.</p>\n\n<p class=\"longComment\"><strong>Warnings</strong> : The binary dump is raw formated, hence <em>a priori</em> platform dependent. Trying to (re-)initialise an already initialised library will generate an error. <a href=\"./#v0.9/group/pumas/pumas_finalise\">pumas_finalise</a> must be called first.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_FORMAT_ERROR            The binary dump is not compatible with the current version.\n\n PUMAS_RETURN_INITIALISATION_ERROR    The library is already initialised.\n\n PUMAS_RETURN_IO_ERROR                Couldn&#39;t read from the stream.\n</code></pre>\n","group":"pumas"},"pumas_transport":{"type":"function","file":"pumas.h","line":558,"lineto":559,"args":[{"name":"context","type":"struct pumas_context *","comment":"The simulation context.\n"},{"name":"state","type":"struct pumas_state *","comment":"The initial or final state.\n"}],"argline":"struct pumas_context *context, struct pumas_state *state","sig":"struct pumas_context *::struct pumas_state *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Transport a particle according to the configured <a href=\"./#v0.9/type/pumas_context\">pumas_context</a>.</p>\n","comments":"<p class=\"longComment\">Depending on the <em>context</em> configuration the particle is transported through one or more media, as provided by the <em>medium</em> callback. At return, the particle <em>state</em> is updated.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_DENSITY_ERROR           A null or negative density was encountered.\n\n PUMAS_RETURN_INITIALISATION_ERROR    The library isn&#39;t initalised.\n\n PUMAS_RETURN_MEDIUM_ERROR            No propagation medium.\n\n PUMAS_RETURN_MISSING_LIMIT           An external limit is needed.\n\n PUMAS_RETURN_MISSING_RANDOM          A *random* callback is needed.\n</code></pre>\n","group":"pumas"},"pumas_print":{"type":"function","file":"pumas.h","line":586,"lineto":587,"args":[{"name":"stream","type":"FILE *","comment":"A stream where the summary will be formated to.\n"},{"name":"tabulation","type":"const char *","comment":"The tabulation separator or <code>NULL</code>.\n"},{"name":"newline","type":"const char *","comment":"The newline separator or <code>NULL</code>.\n"}],"argline":"FILE *stream, const char *tabulation, const char *newline","sig":"FILE *::const char *::const char *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Print a summary of the current library configuration.</p>\n","comments":"<p class=\"longComment\">The summary provides information on loaded materials as well as some basic statistics. The <em>tabulation</em> and <em>newline</em> parameters allow to control the output rendering.</p>\n\n<p class=\"longComment\"><strong>Warnings</strong></p>\n\n<p class=\"longComment\">This function is <strong>not</strong> thread safe. A lock must be set to ensure proper printout in multithreaded applications, if writing concurrently to a same <em>stream</em>.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INITIALISATION_ERROR    The library isn&#39;t initalised.\n\n PUMAS_RETURN_IO_ERROR                Couldn&#39;t write to *stream*.\n</code></pre>\n","group":"pumas"},"pumas_tag":{"type":"function","file":"pumas.h","line":597,"lineto":597,"args":[],"argline":"","sig":"","return":{"type":"int","comment":"The library tag encoded on an <code>int</code>.\n"},"description":"<p>Get the version tag of the library.</p>\n","comments":"<p class=\"longComment\">The library tag is encoded on an <code>int</code> as tag = 10<sup>3</sup>*V+S, with V the version index and S the subversion index.</p>\n","group":"pumas"},"pumas_particle":{"type":"function","file":"pumas.h","line":615,"lineto":616,"args":[{"name":"particle","type":"enum pumas_particle *","comment":"The type of the transported particle or <code>NULL</code>.\n"},{"name":"lifetime","type":"double *","comment":"The type of the transported particle, in m, or <code>NULL</code>.\n"},{"name":"mass","type":"double *","comment":"The mass of the transported particle, in GeV, or <code>NULL</code>.\n"}],"argline":"enum pumas_particle *particle, double *lifetime, double *mass","sig":"enum pumas_particle *::double *::double *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Get info on the transported particle.</p>\n","comments":"<p class=\"longComment\">Retrieve info on the transported particle. If not needed, an argument can be set to <code>NULL</code>.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INITIALISATION_ERROR    The library isn&#39;t initalised.\n</code></pre>\n","group":"pumas"},"pumas_error_string":{"type":"function","file":"pumas.h","line":627,"lineto":627,"args":[{"name":"rc","type":"enum pumas_return","comment":"The return code.\n"}],"argline":"enum pumas_return rc","sig":"enum pumas_return","return":{"type":"const char *","comment":"A static string.\n"},"description":"<p>Return a string describing a <a href=\"./#v0.9/type/pumas_return\">pumas_return</a> code.</p>\n","comments":"<p class=\"longComment\">This function is analog to the standard C <code>strerror</code> function but specific to PUMAS return codes. It is thread safe.</p>\n","group":"error"},"pumas_error_function":{"type":"function","file":"pumas.h","line":638,"lineto":638,"args":[{"name":"function","type":"pumas_function_t *","comment":"The library function.\n"}],"argline":"pumas_function_t *function","sig":"pumas_function_t *","return":{"type":"const char *","comment":"a static string.\n"},"description":"<p>Return a string describing a PUMAS library function.</p>\n","comments":"<p class=\"longComment\">This function is meant for verbosing when handling errors. It is thread safe.</p>\n","group":"error"},"pumas_error_handler_set":{"type":"function","file":"pumas.h","line":652,"lineto":652,"args":[{"name":"handler","type":"pumas_handler_cb *","comment":"The error handler to set or <code>NULL</code>.\n"}],"argline":"pumas_handler_cb *handler","sig":"pumas_handler_cb *","return":{"type":"void","comment":null},"description":"<p>Set or clear the error handler.</p>\n","comments":"<p class=\"longComment\">Set the error handler callback for PUMAS library functions. If <em>handler</em> is set to <code>NULL</code> error callbacks are disabled.</p>\n\n<p class=\"longComment\"><strong>Warnings</strong></p>\n\n<p class=\"longComment\">This function is <strong>not</strong> thread safe.</p>\n","group":"error"},"pumas_error_handler_get":{"type":"function","file":"pumas.h","line":659,"lineto":659,"args":[],"argline":"","sig":"","return":{"type":"pumas_handler_cb *","comment":"The current error handler or <code>NULL</code> if none.\n"},"description":"<p>Get the current error handler.</p>\n","comments":"","group":"error"},"pumas_error_catch":{"type":"function","file":"pumas.h","line":676,"lineto":676,"args":[{"name":"enable","type":"int","comment":"A flag for enabling or disabling error catch.\n"}],"argline":"int enable","sig":"int","return":{"type":"void","comment":null},"description":"<p>Catch the next error.</p>\n","comments":"<p class=\"longComment\">Enable or disable the catch of the next PUMAS library error. While enabled library errors will <strong>not</strong> trigger the error handler. Note however that only the first occuring error will be caught. Call <a href=\"./#v0.9/group/error/pumas_error_raise\">pumas_error_raise</a> to enable the error handler again and raise any caught error.</p>\n\n<p class=\"longComment\"><strong>Warnings</strong></p>\n\n<p class=\"longComment\">This function is not thread safe. Only a single error stream can be handled at a time.</p>\n","group":"error"},"pumas_error_raise":{"type":"function","file":"pumas.h","line":699,"lineto":699,"args":[],"argline":"","sig":"","return":{"type":"enum pumas_return","comment":"If no error was caught <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise\n an error code is returned as detailed below.\n"},"description":"<p>Raise any caught error.</p>\n","comments":"<p class=\"longComment\">Raise any caught error. Error catching must have been enabled first with <a href=\"./#v0.9/group/error/pumas_error_catch\">pumas_error_catch</a> otherwise a specfic <code>PUMAS_RETURN_RAISE_ERROR</code> is returned. Note that calling this function disables further error&#39;s catching.</p>\n\n<p class=\"longComment\"><strong>Warnings</strong></p>\n\n<p class=\"longComment\">This function is not thread safe. Only a single error stream can be handled at a time.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_RAISE_ERROR    Error catching hasn&#39;t been enabled.\n\n PUMAS_RETURN_*              Any caught error&#39;s code.\n</code></pre>\n","group":"error"},"pumas_error_print":{"type":"function","file":"pumas.h","line":718,"lineto":719,"args":[{"name":"stream","type":"FILE *","comment":"The output stream where to print.\n"},{"name":"rc","type":"enum pumas_return","comment":"The error return code.\n"},{"name":"function","type":"pumas_function_t *","comment":"The faulty function or <code>NULL</code>.\n"},{"name":"error","type":"struct pumas_error *","comment":"The additional error data or <code>NULL</code>.\n"}],"argline":"FILE *stream, enum pumas_return rc, pumas_function_t *function, struct pumas_error *error","sig":"FILE *::enum pumas_return::pumas_function_t *::struct pumas_error *","return":{"type":"void","comment":null},"description":"<p>Print a formated summary of error data.</p>\n","comments":"<p class=\"longComment\">The <em>function</em> and <em>error</em> parameters are optional and can be set to <code>NULL</code>. The output summary is formated in JSON.</p>\n\n<p class=\"longComment\"><strong>Warnings</strong></p>\n\n<p class=\"longComment\">This function is <strong>not</strong> thread safe. A lock must be set to ensure proper printout in multithreaded applications, if writing concurrently to a same <em>stream</em>.</p>\n","group":"error"},"pumas_context_create":{"type":"function","file":"pumas.h","line":743,"lineto":744,"args":[{"name":"extra_memory","type":"int","comment":"The size of the user extra memory, if any is claimed.\n"},{"name":"context","type":"struct pumas_context **","comment":"A handle for the simulation context.\n"}],"argline":"int extra_memory, struct pumas_context **context","sig":"int::struct pumas_context **","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Create a simulation context.</p>\n","comments":"<p class=\"longComment\">Create a new simulation context with a default configuration. Call <a href=\"./#v0.9/group/context/pumas_context_destroy\">pumas_context_destroy</a> in order to release all the memory allocated for the context.</p>\n\n<p class=\"longComment\">If <code>extra_memory</code> is strictly positive the context will be extended by <code>extra_memory</code> bytes for user usage. This memory can then be accessed with the <code>user_data</code> field of the returned <a href=\"./#v0.9/type/pumas_context\">pumas_context</a> structure.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INITIALISATION_ERROR    The library isn&#39;t initialised.\n\n PUMAS_RETURN_MEMORY_ERROR            Couldn&#39;t allocate memory.\n</code></pre>\n","group":"context"},"pumas_context_destroy":{"type":"function","file":"pumas.h","line":755,"lineto":755,"args":[{"name":"context","type":"struct pumas_context **","comment":"The simulation context.\n"}],"argline":"struct pumas_context **context","sig":"struct pumas_context **","return":{"type":"void","comment":null},"description":"<p>Destroy a simulation context.</p>\n","comments":"<p class=\"longComment\">Call on a previously created context with <a href=\"./#v0.9/group/context/pumas_context_create\">pumas_context_create</a> in order to release the corresponding dynamicaly allocated memory. On return <code>context</code> is set to <code>NULL</code>.</p>\n","group":"context"},"pumas_property_grammage":{"type":"function","file":"pumas.h","line":779,"lineto":780,"args":[{"name":"scheme","type":"enum pumas_scheme","comment":"The energy loss scheme.\n"},{"name":"material","type":"int","comment":"The material index.\n"},{"name":"kinetic","type":"double","comment":"The initial kinetic energy, in GeV.\n"},{"name":"grammage","type":"double *","comment":"The grammage in kg/m<sup>2</sup>.\n"}],"argline":"enum pumas_scheme scheme, int material, double kinetic, double *grammage","sig":"enum pumas_scheme::int::double::double *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Compute the total grammage that a particle can travel assuming continuous\n energy loss.</p>\n","comments":"<p class=\"longComment\">The energy loss scheme must be one of <code>PUMAS_SCHEME_CSDA</code> or <code>PUMAS_SCHEME_HYBRID</code>. For a uniform medium, divide the return value by the density in order to get the corresponding total travelled distance.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INDEX_ERROR             The scheme of material index is not valid.\n\n PUMAS_RETURN_INITIALISATION_ERROR    The library isn&#39;t initialised.\n</code></pre>\n","group":"property"},"pumas_property_proper_time":{"type":"function","file":"pumas.h","line":804,"lineto":805,"args":[{"name":"scheme","type":"enum pumas_scheme","comment":"The energy loss scheme.\n"},{"name":"material","type":"int","comment":"The material index.\n"},{"name":"kinetic","type":"double","comment":"The initial kinetic energy, in GeV.\n"},{"name":"time","type":"double *","comment":"The normalised proper time in kg/m<sup>2</sup>.\n"}],"argline":"enum pumas_scheme scheme, int material, double kinetic, double *time","sig":"enum pumas_scheme::int::double::double *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Compute the normalised total proper time spent assuming continuous\n energy loss.</p>\n","comments":"<p class=\"longComment\">The energy loss scheme must be one of <code>PUMAS_SCHEME_CSDA</code> or <code>PUMAS_SCHEME_HYBRID</code>. Divide the returned value by the medium density times <em>c</em> in order to get the proper time in unit of time.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INDEX_ERROR             The scheme of material index is not valid.\n\n PUMAS_RETURN_INITIALISATION_ERROR    The library isn&#39;t initialised.\n</code></pre>\n","group":"property"},"pumas_property_magnetic_rotation":{"type":"function","file":"pumas.h","line":826,"lineto":827,"args":[{"name":"material","type":"int","comment":"The material index.\n"},{"name":"kinetic","type":"double","comment":"The initial kinetic energy, in GeV.\n"},{"name":"angle","type":"double *","comment":"The normalised rotation angle in kg/m<sup>2</sup>/T.\n"}],"argline":"int material, double kinetic, double *angle","sig":"int::double::double *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Compute the normalised rotation angle due to a uniform magnetic field for\n a CSDA particle.</p>\n","comments":"<p class=\"longComment\">Multiply the returned value by the transverse magnetic field amplitude and divide by the density in order to get the rotation angle in radian.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INDEX_ERROR             The material index is not valid.\n\n PUMAS_RETURN_INITIALISATION_ERROR    The library isn&#39;t initialised.\n</code></pre>\n","group":"property"},"pumas_property_kinetic_energy":{"type":"function","file":"pumas.h","line":850,"lineto":851,"args":[{"name":"scheme","type":"enum pumas_scheme","comment":"The energy loss scheme\n"},{"name":"material","type":"int","comment":"The material index.\n"},{"name":"grammage","type":"double","comment":"The requested grammage, in kg/m<sup>2</sup>.\n"},{"name":"kinetic","type":"double *","comment":"The required kinetic energy in GeV.\n"}],"argline":"enum pumas_scheme scheme, int material, double grammage, double *kinetic","sig":"enum pumas_scheme::int::double::double *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Compute the minimum kinetic energy required for travelling over a given\n <code>grammage</code>, assuming continuous energy loss.</p>\n","comments":"<p class=\"longComment\">The energy loss scheme must be one of <code>PUMAS_SCHEME_CSDA</code> or <code>PUMAS_SCHEME_HYBRID</code>.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INDEX_ERROR             The scheme of material index is not valid.\n\n PUMAS_RETURN_INITIALISATION_ERROR    The library isn&#39;t initialised.\n</code></pre>\n","group":"property"},"pumas_property_energy_loss":{"type":"function","file":"pumas.h","line":873,"lineto":874,"args":[{"name":"scheme","type":"enum pumas_scheme","comment":"The energy loss scheme\n"},{"name":"material","type":"int","comment":"The material index.\n"},{"name":"kinetic","type":"double","comment":"The kinetic energy, in GeV.\n"},{"name":"deddx","type":"double *","comment":null}],"argline":"enum pumas_scheme scheme, int material, double kinetic, double *deddx","sig":"enum pumas_scheme::int::double::double *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Compute the average energy loss per unit weight of material.</p>\n","comments":"<p class=\"longComment\">The energy loss scheme must be one of <code>PUMAS_SCHEME_CSDA</code> or <code>PUMAS_SCHEME_HYBRID</code>.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INDEX_ERROR             The scheme of material index is not valid.\n\n PUMAS_RETURN_INITIALISATION_ERROR    The library isn&#39;t initialised.\n</code></pre>\n","group":"property"},"pumas_property_scattering_length":{"type":"function","file":"pumas.h","line":898,"lineto":899,"args":[{"name":"material","type":"int","comment":"The material index.\n"},{"name":"kinetic","type":"double","comment":"The kinetic energy, in GeV.\n"},{"name":"length","type":"double *","comment":"The computed MSC length in kg/m<sup>2</sup>.\n"}],"argline":"int material, double kinetic, double *length","sig":"int::double::double *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Compute the Multiple SCattering (MSC) 1<sup>st</sup> transport path length for a\n unit weight.</p>\n","comments":"<p class=\"longComment\">The MSC 1<sup>st</sup> transport path length, λ, is related to the standard deviation of the polar scattering angle&#39;s as θ<sup>2</sup> = X/(2λ), with X the column depth.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INDEX_ERROR             The material index is not valid.\n\n PUMAS_RETURN_INITIALISATION_ERROR    The library isn&#39;t initialised.\n\n PUMAS_RETURN_VALUE_ERROR             The MSC path length is infinite.\n</code></pre>\n","group":"property"},"pumas_property_cross_section":{"type":"function","file":"pumas.h","line":920,"lineto":921,"args":[{"name":"material","type":"int","comment":"The material index.\n"},{"name":"kinetic","type":"double","comment":"The kinetic energy, in GeV.\n"},{"name":"cross_section","type":"double *","comment":"The computed cross-section value.\n"}],"argline":"int material, double kinetic, double *cross_section","sig":"int::double::double *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>The macroscopic inelastic total cross-section.</p>\n","comments":"<p class=\"longComment\">The returned cross-section value is in unit m<sup>2</sup>/kg. Multiply by the density in order to get the inverse of the interaction length in unit of distance.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INDEX_ERROR             The material index is not valid.\n\n PUMAS_RETURN_INITIALISATION_ERROR    The library isn&#39;t initialised.\n</code></pre>\n","group":"property"},"pumas_material_name":{"type":"function","file":"pumas.h","line":939,"lineto":940,"args":[{"name":"index","type":"int","comment":"The material index.\n"},{"name":"material","type":"const char **","comment":"The corresponding material name.\n"}],"argline":"int index, const char **material","sig":"int::const char **","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>The name of a material.</p>\n","comments":"<p class=\"longComment\">The material name is defined in the Material Description File (MDF).</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INDEX_ERROR               The provided index isn&#39;t valid.\n\n PUMAS_RETURN_INITIALISATION_ERROR      The library isn&#39;t initialised.\n</code></pre>\n","group":"material"},"pumas_material_index":{"type":"function","file":"pumas.h","line":959,"lineto":960,"args":[{"name":"material","type":"const char *","comment":"The material name.\n"},{"name":"index","type":"int *","comment":"The corresponding index.\n"}],"argline":"const char *material, int *index","sig":"const char *::int *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>The index of a material.</p>\n","comments":"<p class=\"longComment\">The material index corresponds to the order of declaration specified in the Material Description File (MDF).</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INITIALISATION_ERROR      The library isn&#39;t initialised.\n\n PUMAS_RETURN_UNKNOWN_MATERIAL          The material isn&#39;t defined.\n</code></pre>\n","group":"material"},"pumas_material_length":{"type":"function","file":"pumas.h","line":967,"lineto":967,"args":[],"argline":"","sig":"","return":{"type":"int","comment":"The total number of known materials, basic plus composite.\n"},"description":"<p>The total number of materials.</p>\n","comments":"","group":"material"},"pumas_composite_length":{"type":"function","file":"pumas.h","line":974,"lineto":974,"args":[],"argline":"","sig":"","return":{"type":"int","comment":"The number of composite materials.\n"},"description":"<p>The number of composite materials.</p>\n","comments":"","group":"composite"},"pumas_composite_update":{"type":"function","file":"pumas.h","line":1000,"lineto":1001,"args":[{"name":"material","type":"int","comment":"The composite material index.\n"},{"name":"fractions","type":"const double *","comment":"The vector of mass fractions of the base materials\n                  components.\n"},{"name":"densities","type":"const double *","comment":null}],"argline":"int material, const double *fractions, const double *densities","sig":"int::const double *::const double *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Update the properties of a composite material.</p>\n","comments":"<p class=\"longComment\">Update the composition and/or the density of a composite material. <code>fractions</code> or <code>densities</code> can be <code>NULL</code> in which case the corresponding property is not updated.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_DENSITY_ERROR             Some density value is null or less.\n\n PUMAS_RETURN_INDEX_ERROR               The provided index isn&#39;t valid.\n\n PUMAS_RETURN_INITIALISATION_ERROR      The library isn&#39;t initialised.\n\n PUMAS_RETURN_MEMORY_ERROR              Couldn&#39;t allocate memory.\n</code></pre>\n","group":"composite"},"pumas_composite_properties":{"type":"function","file":"pumas.h","line":1025,"lineto":1026,"args":[{"name":"index","type":"int","comment":"The composite material index.\n"},{"name":"density","type":"double *","comment":"The composite material reference density.\n"},{"name":"components","type":"int *","comment":"The number of base material components of the composite.\n"},{"name":"fractions","type":"double *","comment":"The vector of mass fractions of the base materials\n                   components.\n"},{"name":"densities","type":"double *","comment":"The vector of densities of the base materials components.\n"}],"argline":"int index, double *density, int *components, double *fractions, double *densities","sig":"int::double *::int *::double *::double *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Get the properties of a composite material.</p>\n","comments":"<p class=\"longComment\">Get the properties of a composite material. <code>density</code>, <code>components</code>, <code>fractions</code> or <code>densities</code> can be <code>NULL</code> in which case the corresponding property is not retrieved.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INDEX_ERROR               The provided index isn&#39;t valid.\n\n PUMAS_RETURN_INITIALISATION_ERROR      The library isn&#39;t initialised.\n</code></pre>\n","group":"composite"},"pumas_table_value":{"type":"function","file":"pumas.h","line":1050,"lineto":1051,"args":[{"name":"property","type":"enum pumas_property","comment":"The column index of a property of interest.\n"},{"name":"scheme","type":"enum pumas_scheme","comment":"The energy loss scheme.\n"},{"name":"material","type":"int","comment":"The material index.\n"},{"name":"row","type":"int","comment":"The kinetic value row index in the table.\n"},{"name":"value","type":"double *","comment":"The corresponding table value.\n"}],"argline":"enum pumas_property property, enum pumas_scheme scheme, int material, int row, double *value","sig":"enum pumas_property::enum pumas_scheme::int::int::double *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Accessor to the tabulated shared data.</p>\n","comments":"<p class=\"longComment\">For a given <code>material</code> and energy loss <code>scheme</code>, this function returns the tabulated data corresponding to the given <code>property</code> column and <code>row</code> index. Each row of the table corresponds to a different kinetic energy value.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INDEX_ERROR             Some input index is not valid (property, material or scheme).\n\n PUMAS_RETURN_INITIALISATION_ERROR    The library isn&#39;t initialised.\n</code></pre>\n","group":"table"},"pumas_table_length":{"type":"function","file":"pumas.h","line":1058,"lineto":1058,"args":[],"argline":"","sig":"","return":{"type":"int","comment":"The number of rows in data tables.\n"},"description":"<p>The depth, i.e. number of kinetic values, of the tabulated data.</p>\n","comments":"","group":"table"},"pumas_table_index":{"type":"function","file":"pumas.h","line":1084,"lineto":1085,"args":[{"name":"property","type":"enum pumas_property","comment":"The column index of the property.\n"},{"name":"scheme","type":"enum pumas_scheme","comment":"The energy loss scheme.\n"},{"name":"material","type":"int","comment":"The material index.\n"},{"name":"value","type":"double","comment":"The property value.\n"},{"name":"index","type":"int *","comment":"The row index from below for the given value.\n"}],"argline":"enum pumas_property property, enum pumas_scheme scheme, int material, double value, int *index","sig":"enum pumas_property::enum pumas_scheme::int::double::int *","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Compute the table row index for a given property and its value.</p>\n","comments":"<p class=\"longComment\">In the case of an out of bounds value the closest index value is provided and <code>PUMAS_RETURN_VALUE_ERROR</code> is returned.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_INDEX_ERROR             Some input index is not valid (property, material or scheme).\n\n PUMAS_RETURN_INITIALISATION_ERROR    The library isn&#39;t initialised.\n\n PUMAS_RETURN_VALUE_ERROR             The provided value is out of the table.\n</code></pre>\n","group":"table"},"pumas_recorder_create":{"type":"function","file":"pumas.h","line":1107,"lineto":1108,"args":[{"name":"context","type":"struct pumas_context *","comment":"The simulation context or <code>NULL</code>.\n"},{"name":"recorder","type":"struct pumas_recorder **","comment":"A handle for the recorder.\n"}],"argline":"struct pumas_context *context, struct pumas_recorder **recorder","sig":"struct pumas_context *::struct pumas_recorder **","return":{"type":"enum pumas_return","comment":"On success <code>PUMAS_RETURN_SUCCESS</code> is returned otherwise an error\n code is returned as detailed below.\n"},"description":"<p>Create a new particle recorder.</p>\n","comments":"<p class=\"longComment\">The recorder is configured for a fresh start with default settings. If a non <code>NULL</code> context is provided, the recorder will be linked to it.</p>\n\n<p class=\"longComment\"><strong>Note</strong> : though the recorder&#39;s creation requests a simulation context, the returned proxy might be moved to any other context after creation. However it should not be linked simultaneously to multiple concurent simulation streams.</p>\n\n<p class=\"longComment\"><strong>Error codes</strong></p>\n\n<pre><code> PUMAS_RETURN_MEMORY_ERROR    Couldn&#39;t allocate memory.\n</code></pre>\n","group":"recorder"},"pumas_recorder_clear":{"type":"function","file":"pumas.h","line":1117,"lineto":1117,"args":[{"name":"recorder","type":"struct pumas_recorder *","comment":"The recorder handle.\n"}],"argline":"struct pumas_recorder *recorder","sig":"struct pumas_recorder *","return":{"type":"void","comment":null},"description":"<p>Clear all recorded frames.</p>\n","comments":"<p class=\"longComment\">Erase all recorded states from the recorder and reset the frame count.</p>\n","group":"recorder"},"pumas_recorder_destroy":{"type":"function","file":"pumas.h","line":1127,"lineto":1127,"args":[{"name":"recorder","type":"struct pumas_recorder **","comment":"The recorder handle.\n"}],"argline":"struct pumas_recorder **recorder","sig":"struct pumas_recorder **","return":{"type":"void","comment":null},"description":"<p>Destroy a particle recorder releasing all associated memory.</p>\n","comments":"<p class=\"longComment\"><strong>Note</strong> : The recorder is cleared before beeing destroyed. At return <code>recorder</code> is set to <code>NULL</code>.</p>\n","group":"recorder"},"pumas_memory_allocator":{"type":"function","file":"pumas.h","line":1152,"lineto":1152,"args":[{"name":"allocator","type":"pumas_allocate_cb *","comment":"The user supplied memory allocator, or <code>NULL</code>.\n"}],"argline":"pumas_allocate_cb *allocator","sig":"pumas_allocate_cb *","return":{"type":"void","comment":null},"description":"<p>Set the memory allocation function for the PUMAS library.</p>\n","comments":"<p class=\"longComment\">This function allows to specify a custom memory allocation function for PUMAS. Passing a <code>NULL</code> value results in PUMAS using its default allocator, i.e. <code>malloc</code>.</p>\n\n<p class=\"longComment\"><strong>Warnings</strong></p>\n\n<p class=\"longComment\">This function is <strong>not</strong> thread safe.</p>\n","group":"memory"},"pumas_memory_reallocator":{"type":"function","file":"pumas.h","line":1178,"lineto":1178,"args":[{"name":"reallocator","type":"pumas_reallocate_cb *","comment":"The user supplied memory reallocator, or <code>NULL</code>.\n"}],"argline":"pumas_reallocate_cb *reallocator","sig":"pumas_reallocate_cb *","return":{"type":"void","comment":null},"description":"<p>Set the memory re-allocation function for the PUMAS library.</p>\n","comments":"<p class=\"longComment\">This function allows to specify a custom memory re-allocation function for PUMAS. Passing a <code>NULL</code> value results in PUMAS using its default reallocator, i.e. <code>realloc</code>.</p>\n\n<p class=\"longComment\"><strong>Warnings</strong></p>\n\n<p class=\"longComment\">This function is <strong>not</strong> thread safe.</p>\n","group":"memory"},"pumas_memory_deallocator":{"type":"function","file":"pumas.h","line":1202,"lineto":1202,"args":[{"name":"deallocator","type":"pumas_deallocate_cb *","comment":"The user supplied memory deallocator, or <code>NULL</code>.\n"}],"argline":"pumas_deallocate_cb *deallocator","sig":"pumas_deallocate_cb *","return":{"type":"void","comment":null},"description":"<p>Set the memory deallocation function for the PUMAS library.</p>\n","comments":"<p class=\"longComment\">This function allows to specify a custom memory deallocation function for PUMAS. Passing a <code>NULL</code> value results in PUMAS using its default deallocator, i.e. <code>free</code>.</p>\n\n<p class=\"longComment\"><strong>Warnings</strong></p>\n\n<p class=\"longComment\">This function is <strong>not</strong> thread safe.</p>\n","group":"memory"}},"callbacks":{"pumas_locals_cb":{"type":"callback","file":"pumas.h","line":217,"lineto":218,"args":[{"name":"medium","type":"struct pumas_medium *","comment":"The propagation medium.\n"},{"name":"state","type":"struct pumas_state *","comment":"The Monte-Carlo state for which the local properties are\n                  requested.\n"},{"name":"locals","type":"struct pumas_locals *","comment":"A pointer to a <a href=\"./#v0.9/type/pumas_locals\">pumas_locals</a> structure to update.\n"}],"argline":"struct pumas_medium *medium, struct pumas_state *state, struct pumas_locals *locals","sig":"struct pumas_medium *::struct pumas_state *::struct pumas_locals *","return":{"type":"double","comment":"A local stepping limit.\n"},"description":"<p>Callback for setting the local properties of a propagation medium.</p>\n","comments":"<p class=\"longComment\">The callback must return a proposed Monte-Carlo stepping distance, in m, consistent with the size of the propagation medium inhomogeneities, e. g. 1 % of ρ / |∇ ρ|. Note that returning zero or less signs that the propagation medium is fully uniform.</p>\n\n<p class=\"longComment\"><strong>Warning</strong> : it is an error to return zero or less for any position of the medium if at least one area is not uniform. Instead one should use two different media even though they have the same material base.</p>\n"},"pumas_medium_cb":{"type":"callback","file":"pumas.h","line":303,"lineto":304,"args":[{"name":"context","type":"struct pumas_context *","comment":"The Monte-Carlo context requiring a medium.\n"},{"name":"state","type":"struct pumas_state *","comment":"The Monte-Carlo state for which the medium is requested.\n"},{"name":"medium","type":"struct pumas_medium **","comment":"A pointer to the corresponding medium or <code>NULL</code> if the state\n has exit the simulation area.\n"}],"argline":"struct pumas_context *context, struct pumas_state *state, struct pumas_medium **medium","sig":"struct pumas_context *::struct pumas_state *::struct pumas_medium **","return":{"type":"double","comment":"The proposed step size or <code>0</code> for an infinite medium.\n"},"description":"<p>Callback for locating the propagation medium of a <a href=\"./#v0.9/type/pumas_state\">pumas_state</a>.</p>\n","comments":"<p class=\"longComment\">The callback must propose a Monte-Carlo stepping distance, in m, consistent with the geometry. Note that returning zero or less signs that the corresponding medium has no boundaries.</p>\n\n<p class=\"longComment\"><strong>Warning</strong> : it is an error to return zero or less for any state if the extension is finite.</p>\n"},"pumas_function_t":{"type":"callback","file":"pumas.h","line":312,"lineto":312,"args":[],"argline":"","sig":"","return":{"type":"void","comment":null},"description":"<p>Generic function pointer.</p>\n","comments":"<p class=\"longComment\">This is a generic function pointer used to identify the library functions, e.g. for error handling.</p>\n"},"pumas_handler_cb":{"type":"callback","file":"pumas.h","line":337,"lineto":338,"args":[{"name":"rc","type":"enum pumas_return","comment":"The PUMAS return code.\n"},{"name":"caller","type":"pumas_function_t *","comment":"The caller function where the error occured.\n"},{"name":"error","type":"struct pumas_error *","comment":"Additional info in case of an initialisation error.\n"}],"argline":"enum pumas_return rc, pumas_function_t *caller, struct pumas_error *error","sig":"enum pumas_return::pumas_function_t *::struct pumas_error *","return":{"type":"void","comment":null},"description":"<p>Callback for error handling.</p>\n","comments":"<p class=\"longComment\">The user can provide its own error handler. It will be called at the return of any PUMAS library function providing an error code.</p>\n"},"pumas_random_cb":{"type":"callback","file":"pumas.h","line":353,"lineto":353,"args":[{"name":"context","type":"struct pumas_context *","comment":"The simulation context requiring a random number.\n"}],"argline":"struct pumas_context *context","sig":"struct pumas_context *","return":{"type":"double","comment":"A uniform pseudo random number in [0;1].\n"},"description":"<p>Callback providing a stream of pseudo random numbers.</p>\n","comments":"<p class=\"longComment\"><strong>Note</strong> : this is the only random stream used by PUMAS. The user must unsure proper behaviour, i.e. that a flat distribution in [0;1] is indeed returned.</p>\n\n<p class=\"longComment\"><strong>Warning</strong> : if multiple contexts are used the user must ensure that this callback is thread safe, e.g. by using independant streams for each context or a locking mechanism in order to share a single random stream.</p>\n"},"pumas_allocate_cb":{"type":"callback","file":"pumas.h","line":1137,"lineto":1137,"args":[{"name":"size","type":"int","comment":"The number of memory bytes to allocate.\n"}],"argline":"int size","sig":"int","return":{"type":"void *","comment":"The address of the allocated memory or <code>NULL</code> in case of faillure.\n"},"description":"<p>User supplied callback for memory allocation.</p>\n","comments":"<p class=\"longComment\">The provided callback must conform to the <code>malloc</code> semantic and behaviour.</p>\n"},"pumas_reallocate_cb":{"type":"callback","file":"pumas.h","line":1163,"lineto":1163,"args":[{"name":"ptr","type":"void *","comment":"The address of the memory to reallocate.\n"},{"name":"size","type":"int","comment":"The number of memory bytes requested for the reallocation.\n"}],"argline":"void *ptr, int size","sig":"void *::int","return":{"type":"void *","comment":"The address of the re-allocated memory or <code>NULL</code> in case of faillure.\n"},"description":"<p>User supplied callback for memory re-allocation.</p>\n","comments":"<p class=\"longComment\">The provided callback must conform to the <code>realloc</code> semantic and behaviour.</p>\n"},"pumas_deallocate_cb":{"type":"callback","file":"pumas.h","line":1187,"lineto":1187,"args":[{"name":"ptr","type":"void *","comment":null}],"argline":"void *ptr","sig":"void *","return":{"type":"void","comment":null},"description":"<p>User supplied callback for memory deallocation.</p>\n","comments":"<p class=\"longComment\">The provided callback must conform to the <code>free</code> semantic and behaviour.</p>\n"}},"globals":{},"types":[["pumas_context",{"decl":["pumas_medium_cb * medium","pumas_random_cb * random","struct pumas_recorder * recorder","void * user_data","int longitudinal","int forward","enum pumas_scheme scheme","enum pumas_decay decay","double kinetic_limit","double distance_max","double grammage_max","double time_max"],"type":"struct","value":"pumas_context","file":"pumas.h","line":373,"lineto":416,"tdef":null,"description":" A handle for a simulation stream.","comments":"<p class=\"longComment\">This structure is a proxy to thread specific data for a simulation stream. It exposes some public data that the user may configure or alter directly. However, it also encloses other opaque data. Therefore, it <strong>must</strong> be initialised and released with the <code>pumas_context</code> functions.</p>\n\n<ul>\n<li><p class=\"longComment\">The <code>medium</code> field must be set after any initialisation with <a href=\"./#v0.9/group/context/pumas_context_create\">pumas_context_create</a> and prior to any call to <a href=\"./#v0.9/group/pumas/pumas_transport\">pumas_transport</a>.</p></li>\n<li><p class=\"longComment\">Depending on the level of detail of the simulation a random stream must be provided by the user before any call to <a href=\"./#v0.9/group/pumas/pumas_transport\">pumas_transport</a>.</p></li>\n<li><p class=\"longComment\">For <code>kinetic_limit</code>, <code>distance_max</code> or <code>grammage_max</code> a strictly positive value activates the corresponding limitation. Setting it to <code>0</code> or less disables it however.</p></li>\n</ul>\n","fields":[{"type":"pumas_medium_cb *","name":"medium","comments":"A medium callback. \n"},{"type":"pumas_random_cb *","name":"random","comments":"The pseudo random generator callback. \n"},{"type":"struct pumas_recorder *","name":"recorder","comments":"A <a href=\"./#v0.9/type/pumas_frame\">pumas_frame</a> recorder. \n"},{"type":"void *","name":"user_data","comments":"A pointer to additional memory, if any is requested at\n initialisation.\n"},{"type":"int","name":"longitudinal","comments":"Flag to enable or disable transverse transport. Default is <code>0</code>,\n i.e. transverse transport is enabled.\n"},{"type":"int","name":"forward","comments":"Flag to switch between forward and reverse transport. Default is\n <code>1</code>, i.e. forward Monte-Carlo.\n"},{"type":"enum pumas_scheme","name":"scheme","comments":"The scheme used for the computation of energy losses. Default is\n <code>PUMAS_SCHEME_DETAILED</code>.\n"},{"type":"enum pumas_decay","name":"decay","comments":"The mode for handling decays. Default is <code>PUMAS_DECAY_WEIGHT</code> for\n a muon or <code>PUMAS_DECAY_PROCESS</code> for a tau.\n"},{"type":"double","name":"kinetic_limit","comments":"The minimum kinetic energy for forward transport, or maximum one\n for backward transport.\n"},{"type":"double","name":"distance_max","comments":"The maximum travelled distance. \n"},{"type":"double","name":"grammage_max","comments":"The maximum travelled grammage. \n"},{"type":"double","name":"time_max","comments":"The maximum travelled proper time. \n"}],"block":"pumas_medium_cb * medium\npumas_random_cb * random\nstruct pumas_recorder * recorder\nvoid * user_data\nint longitudinal\nint forward\nenum pumas_scheme scheme\nenum pumas_decay decay\ndouble kinetic_limit\ndouble distance_max\ndouble grammage_max\ndouble time_max","used":{"returns":[],"needs":["pumas_context_create","pumas_context_destroy","pumas_medium_cb","pumas_random_cb","pumas_recorder_create","pumas_transport"]}}],["pumas_decay",{"decl":["PUMAS_DECAY_NONE","PUMAS_DECAY_WEIGHT","PUMAS_DECAY_PROCESS"],"type":"enum","file":"pumas.h","line":96,"lineto":108,"block":"PUMAS_DECAY_NONE\nPUMAS_DECAY_WEIGHT\nPUMAS_DECAY_PROCESS","tdef":null,"description":" Modes for handling particle decays.","comments":"","fields":[{"type":"int","name":"PUMAS_DECAY_NONE","comments":"<p class=\"longComment\">Decays are disabled. </p>\n","value":0},{"type":"int","name":"PUMAS_DECAY_WEIGHT","comments":"<p class=\"longComment\">Decays are accounted for by a weight factor. This is efficient\n for muons but irrelevant -numerically instable- for the forward\n transport of taus since they decay in flight. Hence it is\n disabled in the latter case.</p>\n","value":1},{"type":"int","name":"PUMAS_DECAY_PROCESS","comments":"<p class=\"longComment\">Decays are enabled as a specific Monte-Carlo process. </p>\n","value":2}],"used":{"returns":[],"needs":[]}}],["pumas_error",{"decl":["const char * file","int line"],"type":"struct","value":"pumas_error","file":"pumas.h","line":320,"lineto":325,"block":"const char * file\nint line","tdef":null,"description":" A container for additional info on errors during initialisation.","comments":"<p class=\"longComment\">This structure is a container for getting additional info when an error occurs at initialisation, e.g. when parsing the MDF.</p>\n","fields":[{"type":"const char *","name":"file","comments":"The faulty file if any. \n"},{"type":"int","name":"line","comments":"The faulty line if a parsing error occurs. \n"}],"used":{"returns":[],"needs":["pumas_error_print","pumas_handler_cb","pumas_initialise"]}}],["pumas_frame",{"decl":["struct pumas_state state","struct pumas_medium * medium","struct pumas_frame * next"],"type":"struct","value":"pumas_frame","file":"pumas.h","line":247,"lineto":254,"block":"struct pumas_state state\nstruct pumas_medium * medium\nstruct pumas_frame * next","tdef":null,"description":" A handle to a recorded Monte-Carlo frame.","comments":"<p class=\"longComment\">This structure exposes data relative to a recorded frame. It is not meant to be modified by the user.</p>\n","fields":[{"type":"struct pumas_state","name":"state","comments":"The recorded state. \n"},{"type":"struct pumas_medium *","name":"medium","comments":"The corresponding propagation medium. \n"},{"type":"struct pumas_frame *","name":"next","comments":"Link to the next frame in the record. \n"}],"used":{"returns":[],"needs":[]}}],["pumas_locals",{"decl":["double density","double [3] magnet"],"type":"struct","value":"pumas_locals","file":"pumas.h","line":190,"lineto":195,"block":"double density\ndouble [3] magnet","tdef":null,"description":" The local properties of a propagation medium.","comments":"","fields":[{"type":"double","name":"density","comments":"The material local density, in kg/m<sup>3.</sup> \n"},{"type":"double [3]","name":"magnet","comments":"The local magnetic field components, in T. \n"}],"used":{"returns":[],"needs":["pumas_locals_cb"]}}],["pumas_medium",{"decl":["int material","pumas_locals_cb * locals"],"type":"struct","value":"pumas_medium","file":"pumas.h","line":229,"lineto":240,"tdef":null,"description":" Description of a propagation medium.","comments":"<p class=\"longComment\">A propagation medium is fully defined by:</p>\n\n<ul>\n<li>a <code>material</code> composition with a uniform relative content. - <a href=\"./#v0.9/type/pumas_locals\">pumas_locals</a> properties set by a user provided <a href=\"./#v0.9/group/callback/pumas_locals_cb\">pumas_locals_cb</a> callback.</li>\n</ul>\n","fields":[{"type":"int","name":"material","comments":"The material index in the Material Description File (MDF). It can\n be mapped to the corresponding name with the <code>pumas_material_</code>\n functions.\n"},{"type":"pumas_locals_cb *","name":"locals","comments":"The user supplied callback for setting the medium local properties.\n"}],"block":"int material\npumas_locals_cb * locals","used":{"returns":[],"needs":["pumas_locals_cb","pumas_medium_cb"]}}],["pumas_particle",{"decl":["PUMAS_PARTICLE_MUON","PUMAS_PARTICLE_TAU"],"type":"enum","file":"pumas.h","line":40,"lineto":45,"block":"PUMAS_PARTICLE_MUON\nPUMAS_PARTICLE_TAU","tdef":null,"description":" Particle types supported by the PUMAS transport engine.","comments":"","fields":[{"type":"int","name":"PUMAS_PARTICLE_MUON","comments":"<p class=\"longComment\">The muon or anti-muon lepton. </p>\n","value":0},{"type":"int","name":"PUMAS_PARTICLE_TAU","comments":"<p class=\"longComment\">The tau or anti-tau lepton. </p>\n","value":1}],"used":{"returns":[],"needs":["pumas_initialise","pumas_particle"]}}],["pumas_property",{"decl":["PUMAS_PROPERTY_CROSS_SECTION","PUMAS_PROPERTY_ENERGY_LOSS","PUMAS_PROPERTY_GRAMMAGE","PUMAS_PROPERTY_KINETIC_ENERGY","PUMAS_PROPERTY_MAGNETIC_ROTATION","PUMAS_PROPERTY_PROPER_TIME","PUMAS_PROPERTY_SCATTERING_LENGTH"],"type":"enum","file":"pumas.h","line":50,"lineto":66,"block":"PUMAS_PROPERTY_CROSS_SECTION\nPUMAS_PROPERTY_ENERGY_LOSS\nPUMAS_PROPERTY_GRAMMAGE\nPUMAS_PROPERTY_KINETIC_ENERGY\nPUMAS_PROPERTY_MAGNETIC_ROTATION\nPUMAS_PROPERTY_PROPER_TIME\nPUMAS_PROPERTY_SCATTERING_LENGTH","tdef":null,"description":" Keys for some of the tabulated properties used by PUMAS.","comments":"","fields":[{"type":"int","name":"PUMAS_PROPERTY_CROSS_SECTION","comments":"<p class=\"longComment\">The macroscopic inelastic cross-section, in m<sup>2</sup>/kg. </p>\n","value":0},{"type":"int","name":"PUMAS_PROPERTY_ENERGY_LOSS","comments":"<p class=\"longComment\">The average energy loss, in GeV/(kg/m<sup>2</sup>). </p>\n","value":1},{"type":"int","name":"PUMAS_PROPERTY_GRAMMAGE","comments":"<p class=\"longComment\">The particle range, in kg/m<sup>2</sup>. </p>\n","value":2},{"type":"int","name":"PUMAS_PROPERTY_KINETIC_ENERGY","comments":"<p class=\"longComment\">The particle kinetic energy, in GeV. </p>\n","value":3},{"type":"int","name":"PUMAS_PROPERTY_MAGNETIC_ROTATION","comments":"<p class=\"longComment\">The total magnetic rotation angle, in radians/(kg/m<sup>3</sup>). </p>\n","value":4},{"type":"int","name":"PUMAS_PROPERTY_PROPER_TIME","comments":"<p class=\"longComment\">The particle proper time, in kg/m<sup>2</sup>. </p>\n","value":5},{"type":"int","name":"PUMAS_PROPERTY_SCATTERING_LENGTH","comments":"<p class=\"longComment\">The macroscopic elastic scattering 1<sup>st</sup> path length, in kg/m<sup>2</sup>.</p>\n","value":6}],"used":{"returns":[],"needs":["pumas_table_index","pumas_table_value"]}}],["pumas_recorder",{"decl":["struct pumas_frame * first","int length","int period"],"type":"struct","value":"pumas_recorder","file":"pumas.h","line":268,"lineto":284,"block":"struct pumas_frame * first\nint length\nint period","tdef":null,"description":" A handle for recording Monte-Carlo frames.","comments":"<p class=\"longComment\">This structure is a proxy for recording Monte-Carlo states and accessing them. Although it exposes some public data that the user may alter it also encloses other opaque data. Therefore, it <strong>must</strong> be handled with the <code>pumas_recorder</code> functions.</p>\n\n<p class=\"longComment\"><strong>Note</strong> : in order to enable or disable a recorder it is enough to link or unlink it from the <code>recorder</code> field of any <a href=\"./#v0.9/type/pumas_context\">pumas_context</a>. Only the corresponding context will be recorded.</p>\n","fields":[{"type":"struct pumas_frame *","name":"first","comments":"Link to the 1<sup>st</sup> recorded frame or <code>NULL</code> if none. This field\n should not be modified.\n"},{"type":"int","name":"length","comments":"The total number of recorded frames. This field should not be\n modified.\n"},{"type":"int","name":"period","comments":"The sampling period of the recorder, if strictly positive. If set to\n zero recording is disabled. Otherwise, setting a negative value\n enables a test mode where the full detail of the Monte-Carlo\n stepping is recorded.\n"}],"used":{"returns":[],"needs":["pumas_recorder_clear","pumas_recorder_create","pumas_recorder_destroy"]}}],["pumas_return",{"decl":["PUMAS_RETURN_SUCCESS","PUMAS_RETURN_END_OF_FILE","PUMAS_RETURN_DECAY_ERROR","PUMAS_RETURN_DENSITY_ERROR","PUMAS_RETURN_INCOMPLETE_FILE","PUMAS_RETURN_INDEX_ERROR","PUMAS_RETURN_INITIALISATION_ERROR","PUMAS_RETURN_INTERNAL_ERROR","PUMAS_RETURN_IO_ERROR","PUMAS_RETURN_FORMAT_ERROR","PUMAS_RETURN_MEDIUM_ERROR","PUMAS_RETURN_MEMORY_ERROR","PUMAS_RETURN_MISSING_LIMIT","PUMAS_RETURN_MISSING_RANDOM","PUMAS_RETURN_PATH_ERROR","PUMAS_RETURN_RAISE_ERROR","PUMAS_RETURN_TOO_LONG","PUMAS_RETURN_UNDEFINED_DEDX","PUMAS_RETURN_UNDEFINED_MDF","PUMAS_RETURN_UNKNOWN_ELEMENT","PUMAS_RETURN_UNKNOWN_MATERIAL","PUMAS_RETURN_UNKNOWN_PARTICLE","PUMAS_RETURN_VALUE_ERROR","PUMAS_N_RETURNS"],"type":"enum","file":"pumas.h","line":111,"lineto":160,"block":"PUMAS_RETURN_SUCCESS\nPUMAS_RETURN_END_OF_FILE\nPUMAS_RETURN_DECAY_ERROR\nPUMAS_RETURN_DENSITY_ERROR\nPUMAS_RETURN_INCOMPLETE_FILE\nPUMAS_RETURN_INDEX_ERROR\nPUMAS_RETURN_INITIALISATION_ERROR\nPUMAS_RETURN_INTERNAL_ERROR\nPUMAS_RETURN_IO_ERROR\nPUMAS_RETURN_FORMAT_ERROR\nPUMAS_RETURN_MEDIUM_ERROR\nPUMAS_RETURN_MEMORY_ERROR\nPUMAS_RETURN_MISSING_LIMIT\nPUMAS_RETURN_MISSING_RANDOM\nPUMAS_RETURN_PATH_ERROR\nPUMAS_RETURN_RAISE_ERROR\nPUMAS_RETURN_TOO_LONG\nPUMAS_RETURN_UNDEFINED_DEDX\nPUMAS_RETURN_UNDEFINED_MDF\nPUMAS_RETURN_UNKNOWN_ELEMENT\nPUMAS_RETURN_UNKNOWN_MATERIAL\nPUMAS_RETURN_UNKNOWN_PARTICLE\nPUMAS_RETURN_VALUE_ERROR\nPUMAS_N_RETURNS","tdef":null,"description":" Return codes for the API functions. ","comments":"","fields":[{"type":"int","name":"PUMAS_RETURN_SUCCESS","comments":"<p class=\"longComment\">Execution was successful. </p>\n","value":0},{"type":"int","name":"PUMAS_RETURN_END_OF_FILE","comments":"<p class=\"longComment\">End of file was reached. </p>\n","value":1},{"type":"int","name":"PUMAS_RETURN_DECAY_ERROR","comments":"<p class=\"longComment\">The specified decay mode is not valid. </p>\n","value":2},{"type":"int","name":"PUMAS_RETURN_DENSITY_ERROR","comments":"<p class=\"longComment\">Some medium has a wrong density value. </p>\n","value":3},{"type":"int","name":"PUMAS_RETURN_INCOMPLETE_FILE","comments":"<p class=\"longComment\">Some data file is not complete. </p>\n","value":4},{"type":"int","name":"PUMAS_RETURN_INDEX_ERROR","comments":"<p class=\"longComment\">Some index is out of validity range. </p>\n","value":5},{"type":"int","name":"PUMAS_RETURN_INITIALISATION_ERROR","comments":"<p class=\"longComment\">The library is not/already initialised. </p>\n","value":6},{"type":"int","name":"PUMAS_RETURN_INTERNAL_ERROR","comments":"<p class=\"longComment\">An internal library error occured. </p>\n","value":7},{"type":"int","name":"PUMAS_RETURN_IO_ERROR","comments":"<p class=\"longComment\">Some read /write error occured. </p>\n","value":8},{"type":"int","name":"PUMAS_RETURN_FORMAT_ERROR","comments":"<p class=\"longComment\">Some file is badly formated. </p>\n","value":9},{"type":"int","name":"PUMAS_RETURN_MEDIUM_ERROR","comments":"<p class=\"longComment\">Wrong propagation medium. </p>\n","value":10},{"type":"int","name":"PUMAS_RETURN_MEMORY_ERROR","comments":"<p class=\"longComment\">Some memory couldn&#39;t be allocated. </p>\n","value":11},{"type":"int","name":"PUMAS_RETURN_MISSING_LIMIT","comments":"<p class=\"longComment\">A user supplied limit is required. </p>\n","value":12},{"type":"int","name":"PUMAS_RETURN_MISSING_RANDOM","comments":"<p class=\"longComment\">The random callback is not defined. </p>\n","value":13},{"type":"int","name":"PUMAS_RETURN_PATH_ERROR","comments":"<p class=\"longComment\">Some file couldn&#39;t be found. </p>\n","value":14},{"type":"int","name":"PUMAS_RETURN_RAISE_ERROR","comments":"<p class=\"longComment\">A raise was called without any catch. </p>\n","value":15},{"type":"int","name":"PUMAS_RETURN_TOO_LONG","comments":"<p class=\"longComment\">Some input string is too long. </p>\n","value":16},{"type":"int","name":"PUMAS_RETURN_UNDEFINED_DEDX","comments":"<p class=\"longComment\">No energy loss path specified. </p>\n","value":17},{"type":"int","name":"PUMAS_RETURN_UNDEFINED_MDF","comments":"<p class=\"longComment\">No MDF file specified. </p>\n","value":18},{"type":"int","name":"PUMAS_RETURN_UNKNOWN_ELEMENT","comments":"<p class=\"longComment\">An unkwon element was specified. </p>\n","value":19},{"type":"int","name":"PUMAS_RETURN_UNKNOWN_MATERIAL","comments":"<p class=\"longComment\">An unkwon material was specified. </p>\n","value":20},{"type":"int","name":"PUMAS_RETURN_UNKNOWN_PARTICLE","comments":"<p class=\"longComment\">The particle type is not known. </p>\n","value":21},{"type":"int","name":"PUMAS_RETURN_VALUE_ERROR","comments":"<p class=\"longComment\">Some input value is not valid. </p>\n","value":22},{"type":"int","name":"PUMAS_N_RETURNS","comments":"<p class=\"longComment\">The number of PUMAS return codes.  </p>\n","value":23}],"used":{"returns":["pumas_composite_properties","pumas_composite_update","pumas_context_create","pumas_dump","pumas_error_raise","pumas_initialise","pumas_load","pumas_material_index","pumas_material_name","pumas_particle","pumas_print","pumas_property_cross_section","pumas_property_energy_loss","pumas_property_grammage","pumas_property_kinetic_energy","pumas_property_magnetic_rotation","pumas_property_proper_time","pumas_property_scattering_length","pumas_recorder_create","pumas_table_index","pumas_table_value","pumas_transport"],"needs":["pumas_error_print","pumas_error_string","pumas_handler_cb"]}}],["pumas_scheme",{"decl":["PUMAS_SCHEME_NO_LOSS","PUMAS_SCHEME_CSDA","PUMAS_SCHEME_HYBRID","PUMAS_SCHEME_DETAILED"],"type":"enum","file":"pumas.h","line":71,"lineto":91,"block":"PUMAS_SCHEME_NO_LOSS\nPUMAS_SCHEME_CSDA\nPUMAS_SCHEME_HYBRID\nPUMAS_SCHEME_DETAILED","tdef":null,"description":" Schemes for the computation of energy losses.","comments":"","fields":[{"type":"int","name":"PUMAS_SCHEME_NO_LOSS","comments":"<p class=\"longComment\">All energy losses are disabled.</p>\n\n<p class=\"longComment\"><strong>Note</strong> : This mode is provided for test purpose only. Running\n without energy losses requires specifying a range or grammage limit.</p>\n","value":-1},{"type":"int","name":"PUMAS_SCHEME_CSDA","comments":"<p class=\"longComment\">Energy losses are purely determinstic as given by the Continuously\n Slowing Down Approximation (CSDA).</p>\n","value":0},{"type":"int","name":"PUMAS_SCHEME_HYBRID","comments":"<p class=\"longComment\">Energy losses are simulated using an hybrid Monte-Carlo scheme with\n hard stochastic interactions and a deterministic Continuous Energy\n Loss (CEL).</p>\n","value":1},{"type":"int","name":"PUMAS_SCHEME_DETAILED","comments":"<p class=\"longComment\">In addition to the hybrid scheme small fluctuations of the CEL are\n also simulated.</p>\n","value":2}],"used":{"returns":[],"needs":["pumas_property_energy_loss","pumas_property_grammage","pumas_property_kinetic_energy","pumas_property_proper_time","pumas_table_index","pumas_table_value"]}}],["pumas_state",{"decl":["double charge","double kinetic","double distance","double grammage","double time","double weight","double [3] position","double [3] direction","int decayed"],"type":"struct","value":"pumas_state","file":"pumas.h","line":165,"lineto":185,"block":"double charge\ndouble kinetic\ndouble distance\ndouble grammage\ndouble time\ndouble weight\ndouble [3] position\ndouble [3] direction\nint decayed","tdef":null,"description":" Container for a Monte-Carlo state.","comments":"","fields":[{"type":"double","name":"charge","comments":"The particle&#39;s electric charge. Note that non physical values,\n i.e. different from 1 or -1, could be set. \n"},{"type":"double","name":"kinetic","comments":"The current kinetic energy, in GeV. \n"},{"type":"double","name":"distance","comments":"The total travelled distance, in m. \n"},{"type":"double","name":"grammage","comments":"The total travelled grammage, in kg/m<sup>2.</sup> \n"},{"type":"double","name":"time","comments":"The particle&#39;s proper time, in m/c. \n"},{"type":"double","name":"weight","comments":"The Monte-Carlo weight. \n"},{"type":"double [3]","name":"position","comments":"The absolute location, in m. \n"},{"type":"double [3]","name":"direction","comments":"The momentum&#39;s direction. \n"},{"type":"int","name":"decayed","comments":"Status flag telling if the particle has decayed or not.  \n"}],"used":{"returns":[],"needs":["pumas_locals_cb","pumas_medium_cb","pumas_transport"]}}]],"prefix":"include","groups":[["composite",["pumas_composite_length","pumas_composite_properties","pumas_composite_update"]],["context",["pumas_context_create","pumas_context_destroy"]],["error",["pumas_error_catch","pumas_error_function","pumas_error_handler_get","pumas_error_handler_set","pumas_error_print","pumas_error_raise","pumas_error_string"]],["material",["pumas_material_index","pumas_material_length","pumas_material_name"]],["memory",["pumas_memory_allocator","pumas_memory_deallocator","pumas_memory_reallocator"]],["property",["pumas_property_cross_section","pumas_property_energy_loss","pumas_property_grammage","pumas_property_kinetic_energy","pumas_property_magnetic_rotation","pumas_property_proper_time","pumas_property_scattering_length"]],["pumas",["pumas_dump","pumas_finalise","pumas_initialise","pumas_load","pumas_particle","pumas_print","pumas_tag","pumas_transport"]],["recorder",["pumas_recorder_clear","pumas_recorder_create","pumas_recorder_destroy"]],["table",["pumas_table_index","pumas_table_length","pumas_table_value"]]]}